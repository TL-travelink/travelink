<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.travelink.member.mapper.MemberMapper">

    <resultMap type="memberInfoResponse" id="memberInfo">
        <result column="height" property="height"/>
        <result column="gender" property="gender"/>
        <result column="age" property="age"/>
        <result column="pro_img" property="image.saveFile"/>
    </resultMap>

    <resultMap type="imageInfoDto" id="image">
        <result column="original_file" property="originalFile"/>
        <result column="save_file" property="saveFile"/>
    </resultMap>

    <insert id="createInfo" parameterType="memberInfoDto">
        insert into member_info (member_id, height, gender, age, pro_img)
        values (#{memberId}, #{height}, #{gender}, #{age}, #{image.saveFile})
    </insert>

    <select id="getInfo" parameterType="String" resultMap="memberInfo">
        select height, gender, age, pro_img
        from member_info
        where member_id = #{loginId}
    </select>

    <update id="updateInfo" parameterType="memberInfoDto">
        update member_info
        set height  = #{height},
            gender  = #{gender},
            age     = #{age},
            pro_img = #{image.saveFile}
        where member_id = #{memberId}
    </update>

    <delete id="deleteInfo" parameterType="String">
        delete from member_info
        where member_id = #{loginId}
    </delete>

    <insert id="addFollowing" parameterType="followInfoDto">
      insert into partner (following_id, follower_id)
      values (#{following}, #{follower})
    </insert>

    <insert id="deleteFollowing" parameterType="followInfoDto">
        delete from partner
        where following_id = #{following} and follower_id = #{follower}
    </insert>

    <resultMap id="ProfileDtoMap" type="profileDto">
        <result property="proImg" column="pro_img"/>
        <result property="id" column="id"/>
    </resultMap>

    <!-- SQL 쿼리 정의 -->
    <select id="getFollowing" parameterType="String" resultMap="ProfileDtoMap">
        select pro_img, m.id
        from member m
                 join (select follower_id from partner where following_id = #{loginId}) l
                      on m.id = l.follower_id
                 join member_info i
                      on m.id = i.member_id
    </select>

    <!-- SQL 쿼리 정의 -->
    <select id="getFollower" parameterType="String" resultMap="ProfileDtoMap">
        select pro_img, m.id
        from member m
                 join (select following_id from partner where follower_id = #{loginId}) l
                      on m.id = l.following_id
                 join member_info i
                      on m.id = i.member_id
    </select>

    <resultMap id="MemberDtoMap" type="memberDto">
        <result property="proImg" column="pro_img"/>
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="address" column="address"/>
        <result property="point" column="point"/>
        <result property="grade" column="grade"/>
    </resultMap>


    <select id="getMember" parameterType="String" resultMap="MemberDtoMap">
        select pro_img, i.member_id, name, address, point, grade
        from member m join member_info i on m.id = i.member_id
        where m.id = #{loginId}
    </select>

    <select id="search" parameterType="String" resultMap="ProfileDtoMap">
        SELECT i.pro_img, m.id FROM member m
                          INNER JOIN member_info i ON m.id = i.member_id
        WHERE m.id LIKE CONCAT('%', #{memberId}, '%')
    </select>

    <select id="findFollowing" parameterType="followInfoDto" resultType="Int">
        select Count(*)
            from partner
        where follower_id = #{follower} and following_id = #{following}
    </select>

    <resultMap id="NewFollowDtoMap" type="NewFollowDto">
        <result property="proImg" column="pro_img"/>
        <result property="id" column="id"/>
        <result property="age" column="age"/>
        <result property="gender" column="gender"/>
    </resultMap>


    <select id="findMembers" parameterType="String" resultMap="NewFollowDtoMap">
        select pro_img, m.id, age, gender
        from member m join member_info i on m.id = i.member_id
        where m.id != #{memberId}
          and m.id not in (select follower_id from partner where following_id = #{memberId});
    </select>

    <select id="getBest3Member" parameterType="BestMemberResponse">
        select pro_img, member_id, point, name, gender
        from member m join member_info i on m.id = i.member_id
        order by point desc
        limit 3
    </select>
</mapper>
